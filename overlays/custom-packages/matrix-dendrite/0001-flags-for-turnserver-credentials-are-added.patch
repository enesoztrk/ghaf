From 5bbb5ed0a0f5a56d8485497c768303f476ada39a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Enes=20=C3=96zt=C3=BCrk?= <enes.ozturk@unikie.com>
Date: Thu, 14 Dec 2023 13:30:36 +0200
Subject: [PATCH] flags for turnserver credentials are added

---
 cmd/dendrite-demo-pinecone/main.go | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/cmd/dendrite-demo-pinecone/main.go b/cmd/dendrite-demo-pinecone/main.go
index 8fa935dd..e70bcd3c 100644
--- a/cmd/dendrite-demo-pinecone/main.go
+++ b/cmd/dendrite-demo-pinecone/main.go
@@ -61,6 +61,9 @@ var (
 	instancePort   = flag.Int("port", 8008, "the port that the client API will listen on")
 	instancePeer   = flag.String("peer", "", "the static Pinecone peers to connect to, comma separated-list")
 	instanceListen = flag.String("listen", ":0", "the port Pinecone peers can connect to")
+	instanceTurnServerUri = flag.String("turnserver-uri", "", "Turn server uri name")
+	instanceTurnServerSharedSecret = flag.String("turnserver-shared-secret", "", "Turn server shared secret")
+	instanceTurnServerUserLifetime = flag.String("turnserver-user-lifetime", "", "Turn server user lifetime")
 )
 
 // nolint:gocyclo
@@ -125,6 +128,10 @@ func main() {
 			fmt.Println("Inbound connection", conn.RemoteAddr(), "is connected to port", port)
 		}
 	}()
+	logrus.Infof("WebRTC turn server URI: %s, user life time: %s", *instanceTurnServerUri,*instanceTurnServerUserLifetime)
+
+
+
 
 	cfg := &config.Dendrite{}
 	cfg.Defaults(true)
@@ -142,6 +149,13 @@ func main() {
 	cfg.MSCs.MSCs = []string{"msc2836", "msc2946"}
 	cfg.ClientAPI.RegistrationDisabled = false
 	cfg.ClientAPI.OpenRegistrationWithoutVerificationEnabled = true
+	cfg.ClientAPI.TURN.UserLifetime=*instanceTurnServerUserLifetime
+	var turn_uri_udp="turn:" + *instanceTurnServerUri +"?transport=udp"
+	var turn_uri_tcp="turn:" + *instanceTurnServerUri +"?transport=tcp"
+
+	cfg.ClientAPI.TURN.URIs=[]string{turn_uri_udp,turn_uri_tcp}
+	cfg.ClientAPI.TURN.SharedSecret=*instanceTurnServerSharedSecret
+	//turnutils_uclient  turn.myserver.org -W north -v -y
 	if err := cfg.Derive(); err != nil {
 		panic(err)
 	}
-- 
2.34.1

